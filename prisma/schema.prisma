// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(cuid())
  username String   @unique
  password String
  is_admin Boolean  @default(false)
  Folders  Folder[]
  Files    File[]
}

model Folder {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
  File      File[]
  base      Boolean  @default(false)
}

// We'll want folder name to be unique to each user... Meaning no user can have two folders with the same name. 


// ************************************************************************************************************************************************
// base:
// Should creating a user automatically create a folder? This would be the parent folder for that user, and all other folders they make would exist inside. 
// This wouldn't be done automatically in prisma, we would manually create a folder when we create a user. All other folders owned by this user would reside in this default folder. 
// The base attribute will determine whether a folder is the base for a user. 
// Base folders cannot be deleted by the user, only if the user themself is deleted. 

model File {
  id       String @id @default(cuid())
  name     String
  // Can I make the name unique among files by the same owner? prolly
  owner    User   @relation(fields: [ownerId], references: [id])
  ownerId  String
  folderId String
  folder   Folder @relation(fields: [folderId], references: [id])
  // Consider adding type field? for example jpg, video, word doc?
}

// We've created a folder model, this will contain user's files. Must be connected to a single owner

// Best way to view data is in prisma studio -- npx prisma studio
